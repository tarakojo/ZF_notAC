

強制法、独立性、相対無矛盾性説明
c.t.m.アプローチの正当化のところちゃんと考える


命題φの公理系T上での相対的無矛盾性...Tが無矛盾ならば公理系T+φも無矛盾であること
φはTから独立な命題である ... Tからφもその否定notφも証明できないこと。
(Tが無矛盾であれば)φと¬φのT上での相対的無矛盾性が成り立つことと同値

相対的無矛盾性を調べることで、公理系の(無矛盾性の)強さを比較できる

公理的集合論 ... 公理を厳密に定めて展開する集合論
ZF ... Zermelo-Fraenkel公理系。もっとも一般的な公理系の一つ
AC ... 選択公理

強制法 
集合論のモデルを拡張して新しいモデルを作る技法。
Mを強制法で拡張されたモデルをgeneric extensionといい、
M[G]で表す。(generic filter Gに依存する)

generic extensionで何が成り立つかは、
強制関係と呼ばれる特別な関係によって調べることができる


考察 informal 
厳しそう...大変

1page ... 
下の記述が動機であることを明示
形式化の試み　サイテーション

強制法を形式化する意義
「重要な」を追記　
強制法は重要な技法であることの

「あまりない」->「限られている」

ACの相対的無矛盾性は証明されているので
notACの相対的無矛盾性とあわせて
ACの独立性の形式化がされたことになります。

相対的無矛盾性を証明するモチベーション->独立性を証明したい


2page : 
何が集合か -> 集合がみたすべき性質を公理として定めた理論
ldots -> コロン
整列可能定理やZorn lemmaとACが同値であることを述べておく
koneg補題とかも？


ZFのところ「一階述語論理上で形式化された」を明示
最も一般的な->よく採用される


4page : 
なぜモデルを作るのか？
モデルが存在すれば無矛盾であることを述べておく

informalな説明であると明示して、、、
Gはposetから存在が言えて、
posetを決めることである程度M[G]で成り立つことを強制できる

posetを決めたうえで、
強制関係を調べることで、実際に何が成り立っているかを確認できる

5page : コンマの間半角スペース

6page : 実績の例 -> 利用例

サブitemize -> アスタリスク->短いハイフン

7page : 
本研究では、Isabelle/ZF上で形式化されたZFをあつかうことを下に書く
Isabelle/ZFとZF+notACとかのZFはレベルが違うことを口でもいう
paulsonの形式化した一階述語論理を利用していることも言っておく?

モデルを作るといっているのは、
メタレベルのIsabelle/ZFの中で
対象レベルのZFのモデルとなっている集合を作るということ


9page : 
この仮定によりギャップが生じるはここでは書かない

gunther...読み方調べる

強制法の形式化が使える -> すでにある
※けす

10page : 
karagila23のリファレンスを追加
と呼ばれる->のひとつである

11page : 
コード改行してはみ出さないように

12page  :
symmetric extensionの構成法の定義
工程　番号づけ
symmetric extension Nの構成

14page :
タイトルを面倒だった点に
クラスであることの確認...ろんりしきが存在することは間接的な表現。
最後に、後で考察を追記

15page : 
タイトルを困難だった点に

クラスであることが証明できなかったが先

Isabelle/ZF上でこうせいしたクラスNが
M[G]上でもクラスであることが証明できなかった
書き下すのが面倒なだけじゃなくて、非自明？

なぜかというと、(一番下に命題かいて)がひつようになるから


形式化できていない部分
最後 労力的にはけして、形式化が難しい?


要所要所でコードをはる

4:3に直す？